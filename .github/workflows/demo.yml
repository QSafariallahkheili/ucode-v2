name: "Build, test and deploy to DEMO"

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "SHA to deploy"
        required: true
        default: "HEAD"

defaults:
  run:
    shell: bash

env:
  BASE_DOMAIN: "urban-codesign.com"
  ENVIRONMENT: "demo"

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.sha }}
      - name: Install dependencies
        run: |
          cd backend
          make install-dev
          make test

  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.sha }}
      - name: Install dependencies
        run: |
          cd frontend
          npm install
          npm run test:unit

  build:
    name: "Build all containers"
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.sha }}
      - name: Try to build containers
        run: docker compose build
      - name: Replace credentials
        run: sed -i 's/XXX_API_KEY_XXX/${{secrets.API_KEY}}/g' docker-compose.yml

  build-and-deploy:
    runs-on: [self-hosted, linux, ucode-demo.cloud]
    needs: build
    environment: demo
    env:
      APP_API_BASE_URL: https://api.demo.urban-codesign.com
      API_KEY: ${{secrets.API_KEY}}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.sha }}

      - name: List currently running containers
        run: docker compose ps

      - name: Stop running containers
        run: docker compose down

      - name: Create container data directory
        run: mkdir -p /opt/container-data

      - name: Create symbolic link to persisted volume location
        run: ln -s /opt/container-data/ $PWD/database/container-data

      - name: (Re)build containers
        run: docker compose build

      - name: Start newly built containers in detached mode
        run: docker compose up --detach
